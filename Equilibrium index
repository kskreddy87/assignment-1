import java.io.*;
import java.util.*;

class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t =
            Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while (t-- > 0) {
            
            //taking input n
            int n = Integer.parseInt(br.readLine().trim());
            long arr[] = new long[n];
            String inputLine[] = br.readLine().trim().split(" ");
            
            //adding elements to the array
            for (int i = 0; i < n; i++) {
                arr[i] = Long.parseLong(inputLine[i]);
            }

            Solution ob = new Solution();
            
            //calling equilibriumPoint() function
            System.out.println(ob.equilibriumPoint(arr, n));
        }
    }
}


class Solution 
{
    public static int equilibriumPoint(long arr[], int n) 
    {
        if (n== 1)
        return (1);
     
      long[] prefix = new long[n];
      prefix[0]=arr[0];
      // Taking the prefixsum from front end array
      for (int i = 1; i < n; i++)
      {
        prefix[i] = prefix[i - 1] + arr[i];
      }
      long ls=0,rs=0; 
     // Checking for equilibrium index by
     for(int i = 1; i < n-1; i++)
     {
       ls=prefix[i-1];
       rs=prefix[n-1]-prefix[i];
       if(ls==rs)
       return i+1;
     }
     
     return -1;
    }
}
